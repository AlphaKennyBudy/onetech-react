{"version":3,"sources":["contexts/ModeContext.ts","hooks/useMode.ts","components/ModeSwitcher/ModeSwitcher.tsx","contexts/LangContext.ts","hooks/useLang.ts","components/LangSwitcher/LangSwitcher.tsx","components/Navbar/Navbar.tsx","components/CVBoilerplate/CVBoilerplate.tsx","pages/CVPage/CVPage.tsx","pages/ProjectPage/ProjectPage.tsx","pages/ContactPage/ContactPage.tsx","pages/MainPage/MainPage.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["ModeContext","createContext","undefined","useMode","useContext","ModeSwitcher","mode","setMode","className","type","name","id","checked","onChange","htmlFor","role","LangContext","useLang","LangSwitcher","lang","setLang","Navbar","ctx","EN","RU","to","src","alt","projects","contacts","CVBoilerplate","surname","job","email","href","emailValue","target","website","websiteValue","mobile","mobileValue","info","workExp","jobTitleAtCompany","jobDate","skills","skillsValue","map","item","key","education","university","qualification","CVPage","ProjectPage","title","ContactPage","MainPage","useState","useEffect","Mode","Modes","dark","light","Object","entries","value","document","documentElement","style","setProperty","changeMode","Provider","path","exact","component","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.9a6a0bb4.chunk.js","sourcesContent":["import { createContext } from \"react\";\n\ntype ModeContextType = {\n  mode: boolean;\n  setMode: (value: boolean) => void;\n};\n\nconst ModeContext = createContext<ModeContextType | undefined>(undefined);\n\nexport default ModeContext;\n","import { useContext } from \"react\";\nimport ModeContext from \"../contexts/ModeContext\";\n\nconst useMode = () => useContext(ModeContext);\n\nexport default useMode;\n","import React from \"react\";\n\nimport \"./ModeSwitcher.css\";\nimport useMode from \"../../hooks/useMode\";\n\nfunction ModeSwitcher() {\n  const { mode, setMode } = useMode()!;\n\n  return (\n    <div className=\"ModeSwitcher__wrapper\">\n      <input\n        type=\"checkbox\"\n        name=\"ModeSwitcher\"\n        id=\"ModeSwitcher\"\n        checked={mode}\n        onChange={() => {\n          setMode(!mode);\n        }}\n      />\n      <label htmlFor=\"ModeSwitcher\" className=\"ModeSwitcher__label\">\n        <span role=\"img\" className=\"fa-sun\">\n          â˜€\n        </span>\n        <span role=\"img\" className=\"fa-moon\">\n          ðŸŒ™\n        </span>\n        <div className=\"fa-ball\"></div>\n      </label>\n    </div>\n  );\n}\n\nexport default ModeSwitcher;\n","import { createContext } from \"react\";\n\ntype LangContextType = {\n  lang: boolean;\n  setLang: (value: boolean) => void;\n};\n\nconst LangContext = createContext<LangContextType | undefined>(undefined);\n\nexport default LangContext;\n","import { useContext } from \"react\";\nimport LangContext from \"../contexts/LangContext\";\n\nconst useLang = () => useContext(LangContext);\n\nexport default useLang;\n","import React from \"react\";\n\nimport \"./LangSwitcher.css\";\nimport useLang from \"../../hooks/useLang\";\n\nfunction LangSwitcher() {\n  const { lang, setLang } = useLang()!;\n  return (\n    <div className=\"LangSwitcher__wrapper\">\n      <input\n        type=\"checkbox\"\n        name=\"LangSwitcher\"\n        id=\"LangSwitcher\"\n        checked={lang}\n        onChange={() => setLang(!lang)}\n      />\n      <label htmlFor=\"LangSwitcher\" className=\"LangSwitcher__label\">\n        <span className=\"fa-sun\">RU</span>\n        <span className=\"fa-moon\">EN</span>\n        <div className=\"fa-ball\"></div>\n      </label>\n    </div>\n  );\n}\n\nexport default LangSwitcher;\n","import React from \"react\";\n\nimport { Link } from \"react-router-dom\";\n\nimport \"./Navbar.css\";\n\nimport ModeSwitcher from \"../ModeSwitcher/ModeSwitcher\";\nimport LangSwitcher from \"../LangSwitcher/LangSwitcher\";\n\nimport { navbar as EN } from \"../../lang/en.json\";\nimport { navbar as RU } from \"../../lang/ru.json\";\nimport useLang from \"../../hooks/useLang\";\n\nfunction Navbar() {\n  const ctx = useLang()!.lang ? EN : RU;\n  return (\n    <nav className=\"Navbar\">\n      <ul className=\"Navbar__list\">\n        <li>\n          <Link className=\"Navbar__list__item\" to=\"/\">\n            <div id=\"headshot\" className=\"quickFade\">\n              <img\n                src=\"https://avatars2.githubusercontent.com/u/48881444?s=460&u=a2317274ce4b7c57e3c87e604e55595d65d02a2a&v=4\"\n                alt=\"Logo\"\n              />\n            </div>\n          </Link>\n        </li>\n        <li>\n          <Link className=\"Navbar__list__item\" to=\"/projects\">\n            {ctx.projects}\n          </Link>\n        </li>\n        <li>\n          <Link className=\"Navbar__list__item\" to=\"/contacts\">\n            {ctx.contacts}\n          </Link>\n        </li>\n        <li className=\"Navbar__list__item\">\n          <ModeSwitcher />\n        </li>\n        <li className=\"Navbar__list__item\">\n          <LangSwitcher />\n        </li>\n      </ul>\n    </nav>\n  );\n}\n\nexport default Navbar;\n","import React from \"react\";\n\nimport \"./CVBoilerplate.css\";\n\nimport { cv as EN } from \"../../lang/en.json\";\nimport { cv as RU } from \"../../lang/ru.json\";\nimport useLang from \"../../hooks/useLang\";\n\nfunction CVBoilerplate() {\n  const ctx = useLang()!.lang ? EN : RU;\n  return (\n    <div id=\"cv\" className=\"instaFade\">\n      <div className=\"mainDetails\">\n        <div id=\"headshot\" className=\"quickFade\">\n          <img\n            src=\"https://avatars2.githubusercontent.com/u/48881444?s=460&u=a2317274ce4b7c57e3c87e604e55595d65d02a2a&v=4\"\n            alt={ctx.name}\n          />\n        </div>\n\n        <div id=\"name\">\n          <h1 className=\"quickFade delayTwo\">{`${ctx.name} ${ctx.surname}`}</h1>\n          <h2 className=\"quickFade delayThree\">{ctx.job}</h2>\n        </div>\n\n        <div id=\"contactDetails\" className=\"quickFade delayFour\">\n          <ul>\n            <li>\n              {ctx.email}:{\" \"}\n              <a href={`mailto:${ctx.emailValue}`} target=\"_blank\">\n                {ctx.emailValue}\n              </a>\n            </li>\n            <li>\n              {ctx.website}: <a href={ctx.websiteValue}>{ctx.websiteValue}</a>\n            </li>\n            <li>\n              {ctx.mobile}: {ctx.mobileValue}\n            </li>\n          </ul>\n        </div>\n        <div className=\"clear\"></div>\n      </div>\n\n      <div id=\"mainArea\" className=\"quickFade delayFive\">\n        <section>\n          <article>\n            <div className=\"sectionTitle\">\n              <h1>{ctx.info}</h1>\n            </div>\n\n            <div className=\"sectionContent\">\n              <p>\n                Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer\n                dolor metus, interdum at scelerisque in, porta at lacus.\n                Maecenas dapibus luctus cursus. Lorem ipsum dolor sit amet,\n                consectetur adipiscing elit. Donec ultricies massa et erat\n                luctus hendrerit. Curabitur non consequat enim. Vestibulum\n                bibendum mattis dignissim. Proin id sapien quis libero interdum\n                porttitor.\n              </p>\n            </div>\n          </article>\n          <div className=\"clear\"></div>\n        </section>\n\n        <section>\n          <div className=\"sectionTitle\">\n            <h1>{ctx.workExp}</h1>\n          </div>\n\n          <div className=\"sectionContent\">\n            <article>\n              <h2>{ctx.jobTitleAtCompany}</h2>\n              <p className=\"subDetails\">{ctx.jobDate}</p>\n              <p>\n                Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec\n                ultricies massa et erat luctus hendrerit. Curabitur non\n                consequat enim. Vestibulum bibendum mattis dignissim. Proin id\n                sapien quis libero interdum porttitor.\n              </p>\n            </article>\n          </div>\n          <div className=\"clear\"></div>\n        </section>\n\n        <section>\n          <div className=\"sectionTitle\">\n            <h1>{ctx.skills}</h1>\n          </div>\n\n          <div className=\"sectionContent\">\n            <ul className=\"keySkills\">\n              {ctx.skillsValue.map((item: string) => (\n                <li key={item}>{item}</li>\n              ))}\n            </ul>\n          </div>\n          <div className=\"clear\"></div>\n        </section>\n\n        <section>\n          <div className=\"sectionTitle\">\n            <h1>{ctx.education}</h1>\n          </div>\n\n          <div className=\"sectionContent\">\n            <article>\n              <h2>{ctx.university}</h2>\n              <p className=\"subDetails\">{ctx.qualification}</p>\n              <p>\n                Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec\n                ultricies massa et erat luctus hendrerit. Curabitur non\n                consequat enim.\n              </p>\n            </article>\n          </div>\n          <div className=\"clear\"></div>\n        </section>\n      </div>\n    </div>\n  );\n}\n\nexport default CVBoilerplate;\n","import React from \"react\";\n\nimport \"./CVPage.css\";\n\nimport CVBoilerplate from \"../../components/CVBoilerplate/CVBoilerplate\";\n\nfunction CVPage() {\n  return (\n    <div className=\"CVPage\">\n      <CVBoilerplate />\n    </div>\n  );\n}\n\nexport default CVPage;\n","import React from \"react\";\n\nimport \"./ProjectPage.css\";\n\nfunction ProjectPage() {\n  return (\n    <div className=\"ProjectPage instaFade\">\n      <h1 className=\"ProjectTitle\">Task2 - Phone Book</h1>\n      <iframe\n        className=\"ProjectFrame\"\n        src=\"https://onetech-react.vercel.app/\"\n        title=\"Task2 - Phone Book\"\n      ></iframe>\n      <h1 className=\"ProjectTitle\">Task 3 - Notes</h1>\n      <iframe\n        className=\"ProjectFrame\"\n        src=\"https://onetech-react.alphakennybudy.vercel.app/\"\n        title=\"Task 3 - Notes\"\n      ></iframe>\n    </div>\n  );\n}\nexport default ProjectPage;\n","import React from \"react\";\n\nimport { cv as EN } from \"../../lang/en.json\";\nimport { cv as RU } from \"../../lang/ru.json\";\nimport useLang from \"../../hooks/useLang\";\n\nfunction ContactPage() {\n  const ctx = useLang()!.lang ? EN : RU;\n  return (\n    <div className=\"ContactPage\">\n      <div id=\"cv\" className=\"instaFade\">\n        <div className=\"mainDetails\"></div>\n\n        <div id=\"mainArea\" className=\"quickFade delayFive\">\n          <section>\n            <article>\n              <div className=\"sectionTitle\">\n                <h1>{ctx.mobile}</h1>\n              </div>\n\n              <div className=\"sectionContent\">\n                <p>{ctx.mobileValue}</p>\n              </div>\n            </article>\n            <div className=\"clear\"></div>\n          </section>\n\n          <section>\n            <div className=\"sectionTitle\">\n              <h1>{ctx.email}</h1>\n            </div>\n\n            <div className=\"sectionContent\">\n              <article>\n                <p>{ctx.emailValue}</p>\n              </article>\n            </div>\n            <div className=\"clear\"></div>\n          </section>\n\n          <section>\n            <div className=\"sectionTitle\">\n              <h1>{ctx.website}</h1>\n            </div>\n\n            <div className=\"sectionContent\">\n              <p>{ctx.websiteValue}</p>\n            </div>\n            <div className=\"clear\"></div>\n          </section>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ContactPage;\n","import React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport \"./MainPage.css\";\n\nimport Navbar from \"../../components/Navbar/Navbar\";\nimport CVPage from \"../CVPage/CVPage\";\nimport ProjectPage from \"../ProjectPage/ProjectPage\";\nimport ContactPage from \"../ContactPage/ContactPage\";\nimport ModeContext from \"../../contexts/ModeContext\";\nimport LangContext from \"../../contexts/LangContext\";\n\nimport Modes from \"../../styles/modes.json\";\n\nfunction MainPage() {\n  const [mode, setMode] = useState(true);\n  const [lang, setLang] = useState(true);\n\n  const changeMode = () => {\n    let Mode;\n    if (mode) {\n      Mode = Modes.dark;\n    } else {\n      Mode = Modes.light;\n    }\n\n    for (let [key, value] of Object.entries(Mode)) {\n      document.documentElement.style.setProperty(key, value);\n    }\n  };\n\n  useEffect(() => {\n    changeMode();\n  }, [mode]);\n\n  return (\n    <Router>\n      <div className=\"MainPage\">\n        <LangContext.Provider value={{ lang, setLang }}>\n          <ModeContext.Provider value={{ mode, setMode }}>\n            <Navbar />\n            <Switch>\n              <Route path=\"/\" exact component={CVPage} />\n              <Route path=\"/projects\" component={ProjectPage} />\n              <Route path=\"/contacts\" component={ContactPage} />\n            </Switch>\n          </ModeContext.Provider>\n        </LangContext.Provider>\n      </div>\n    </Router>\n  );\n}\n\nexport default MainPage;\n","import React from \"react\";\r\n\r\nimport MainPage from \"./pages/MainPage/MainPage\";\r\n\r\nimport \"./App.css\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <MainPage />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./styles/reset.css\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}